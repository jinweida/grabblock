package service

import (
	"testing"
)

var trans2 = `{
  "retCode": 1,
  "transaction": {
    "hash": "0x012cac9a2e2368496c03f76b0d0668145bb803c38473c6b6fcf248bd09812fc084",
    "body": {
      "nonce": 8,
      "address": "0x2994f889824ba33c08a8c1fc20bb225f49393aa7",
      "fee_hi": 0,
      "fee_low": 0,
      "inner_codetype": 6,
      "code_data": "0x08021ac0020a5c08e8940b100318032228323239356263633561323432383662346131386237656530366166616135313834386164623830642a286466393334393739623963396336336436353237653636363138353634613937326461393661616512300fcb53e05ab03a71be0c706c79a8ff972c9161d686a6fc47830c04ec583b99faa8b006bb96b5c4c2ef38f09f7ad533601a910104b1e4917f6e142e0fd1c770c4dbbb49715e2033dac7626af83849e77dbfb045b120be43fbdc3ca0c0bcbdb28a13e10344bf1b5596a268874fa3ff6d4187f6c273bacf94499e5af11dccd9399aeaca55f3c5c91aeb62a204b34a416a0d2e19064313f9a3c7a4f5cd27d6343313045f0cd5209cc5dee65afb8ee04b985a3eabfa94cc6cbec5e2ae0e7f8bf059f019b2883e220476312e302a1421e60e7f05528cd149389521398256de73682b43",
      "timestamp": 1595221735853,
      "biz_id": "0xb3d90a2da054bdbcad9722f2d7fcfc847bbb1af2",
      "sys_id": "0xdf934979b9c9c63d6527e66618564a972da96aae"
    },
    "signature": "0xad165f8a6f60c389a703ed7cd5ecaf99ed1ffac379ae2d4241f88b020fba01e23289f4d84fde376d011e15aa67d3d1a7ee851770046ee782d9b2adfe9f471a862994f889824ba33c08a8c1fc20bb225f49393aa7cd47d7b6c25276f68c78ad45e9e6a1bda2ff4cfc15b8339e56165c115b1831a5e4fb8ea0a0ff22c819535867def193b62ee9c78d02b9a24ee98b02cc5cc90638",
    "status": {
      "status": "0x01",
      "result": "0x
      "height": 1025,
      "timestamp": 1595221751082
    },
    "node": {
      "address": "0x3c1ea4aa4974d92e0eabd5d024772af3762720a0"
    },
    "accepttimestamp": 1595221749543
  }
}`

func TestParsing_DecodeFile(t *testing.T) {
	//transaction := &entity.RetTransactionMessage{}
	//err := conf.ParseConf("../config.json")
	//if err != nil {
	//	if os.IsNotExist(err) {
	//		t.Error("please config config.json")
	//		os.Exit(0)
	//	}
	//	t.Error(err)
	//}
	//models.Setup()
	//if err := json.Unmarshal([]byte(trans2), &transaction); err != nil {
	//	t.Error(err)
	//}
	//par := NewStartup()
	//par.DecodeFile(transaction.Transaction)
}

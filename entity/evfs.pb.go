// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.0
// source: evfs.proto

package entity

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ActionModule int32

const (
	ActionModule_EVA ActionModule = 0 // evfs相关
)

// Enum value maps for ActionModule.
var (
	ActionModule_name = map[int32]string{
		0: "EVA",
	}
	ActionModule_value = map[string]int32{
		"EVA": 0,
	}
)

func (x ActionModule) Enum() *ActionModule {
	p := new(ActionModule)
	*p = x
	return p
}

func (x ActionModule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionModule) Descriptor() protoreflect.EnumDescriptor {
	return file_evfs_proto_enumTypes[0].Descriptor()
}

func (ActionModule) Type() protoreflect.EnumType {
	return &file_evfs_proto_enumTypes[0]
}

func (x ActionModule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionModule.Descriptor instead.
func (ActionModule) EnumDescriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{0}
}

type ActionCMD int32

const (
	ActionCMD_FUN ActionCMD = 0 //调用合约函数
	ActionCMD_QUE ActionCMD = 1 //查询接口
	//文件操作
	ActionCMD_UPL  ActionCMD = 2  // evfs上传文件块 req=PutFileSegmentMessage  resp=RetPutFileSegmentMessage
	ActionCMD_DNL  ActionCMD = 3  // evfs下载文件 req=GetFileSegmentMessage  resp=RetGetFileSegmentMessage
	ActionCMD_CHK  ActionCMD = 4  // evfs验证是否授权 req=CheckFileAuthMessage  resp=RetCheckFileAuthMessage
	ActionCMD_GCK  ActionCMD = 5  // evfs获取chainkey公钥 req=GetChainKeyMessage   resp=RetGetChainKeyMessage
	ActionCMD_GFI  ActionCMD = 6  // evfs获取文件元信息 req=GetFileInfoMessage  resp= RetGetFileInfoMessage
	ActionCMD_FVL  ActionCMD = 7  // 获取链上文件md5方法
	ActionCMD_GED  ActionCMD = 8  // 根据datahash读取数据
	ActionCMD_GEDH ActionCMD = 9  // 根据datahash和版本读取指定版本数据
	ActionCMD_LDSN ActionCMD = 60 // 存管域的节点列表
	ActionCMD_GDS  ActionCMD = 61 // 获取存管域信息
	ActionCMD_GBD  ActionCMD = 62 // 获取业务域信息
	ActionCMD_VBS  ActionCMD = 70 // 验证业务系统身份接口
	ActionCMD_VHC  ActionCMD = 71 // 验证前置节点身份接口
)

// Enum value maps for ActionCMD.
var (
	ActionCMD_name = map[int32]string{
		0:  "FUN",
		1:  "QUE",
		2:  "UPL",
		3:  "DNL",
		4:  "CHK",
		5:  "GCK",
		6:  "GFI",
		7:  "FVL",
		8:  "GED",
		9:  "GEDH",
		60: "LDSN",
		61: "GDS",
		62: "GBD",
		70: "VBS",
		71: "VHC",
	}
	ActionCMD_value = map[string]int32{
		"FUN":  0,
		"QUE":  1,
		"UPL":  2,
		"DNL":  3,
		"CHK":  4,
		"GCK":  5,
		"GFI":  6,
		"FVL":  7,
		"GED":  8,
		"GEDH": 9,
		"LDSN": 60,
		"GDS":  61,
		"GBD":  62,
		"VBS":  70,
		"VHC":  71,
	}
)

func (x ActionCMD) Enum() *ActionCMD {
	p := new(ActionCMD)
	*p = x
	return p
}

func (x ActionCMD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionCMD) Descriptor() protoreflect.EnumDescriptor {
	return file_evfs_proto_enumTypes[1].Descriptor()
}

func (ActionCMD) Type() protoreflect.EnumType {
	return &file_evfs_proto_enumTypes[1]
}

func (x ActionCMD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionCMD.Descriptor instead.
func (ActionCMD) EnumDescriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{1}
}

type ContractEVFS_FunctionEVFS int32

const (
	ContractEVFS_UNKNOW             ContractEVFS_FunctionEVFS = 0
	ContractEVFS_CONSTRUCTOR        ContractEVFS_FunctionEVFS = 1
	ContractEVFS_FILEUPLOADAPPLY    ContractEVFS_FunctionEVFS = 2 //文件上传申请
	ContractEVFS_FILEAUTHORIZE      ContractEVFS_FunctionEVFS = 3 //文件访问授权
	ContractEVFS_FILEUPLOADCONFIRM  ContractEVFS_FunctionEVFS = 4 //文件上传确认
	ContractEVFS_FILEFREEZEOP       ContractEVFS_FunctionEVFS = 5 //文件冻结解冻操作
	ContractEVFS_FILEDELETEAPPLY    ContractEVFS_FunctionEVFS = 6 //文件删除申请
	ContractEVFS_FILEDELETECONFIRM  ContractEVFS_FunctionEVFS = 7 //文件删除确认
	ContractEVFS_DATASTORE          ContractEVFS_FunctionEVFS = 8 // evfs数据存储
	ContractEVFS_DATASTOREAUTHORIZE ContractEVFS_FunctionEVFS = 9 // evfs数据存储授权
	ContractEVFS_DATASTOREDEL       ContractEVFS_FunctionEVFS = 10
)

// Enum value maps for ContractEVFS_FunctionEVFS.
var (
	ContractEVFS_FunctionEVFS_name = map[int32]string{
		0:  "UNKNOW",
		1:  "CONSTRUCTOR",
		2:  "FILEUPLOADAPPLY",
		3:  "FILEAUTHORIZE",
		4:  "FILEUPLOADCONFIRM",
		5:  "FILEFREEZEOP",
		6:  "FILEDELETEAPPLY",
		7:  "FILEDELETECONFIRM",
		8:  "DATASTORE",
		9:  "DATASTOREAUTHORIZE",
		10: "DATASTOREDEL",
	}
	ContractEVFS_FunctionEVFS_value = map[string]int32{
		"UNKNOW":             0,
		"CONSTRUCTOR":        1,
		"FILEUPLOADAPPLY":    2,
		"FILEAUTHORIZE":      3,
		"FILEUPLOADCONFIRM":  4,
		"FILEFREEZEOP":       5,
		"FILEDELETEAPPLY":    6,
		"FILEDELETECONFIRM":  7,
		"DATASTORE":          8,
		"DATASTOREAUTHORIZE": 9,
		"DATASTOREDEL":       10,
	}
)

func (x ContractEVFS_FunctionEVFS) Enum() *ContractEVFS_FunctionEVFS {
	p := new(ContractEVFS_FunctionEVFS)
	*p = x
	return p
}

func (x ContractEVFS_FunctionEVFS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContractEVFS_FunctionEVFS) Descriptor() protoreflect.EnumDescriptor {
	return file_evfs_proto_enumTypes[2].Descriptor()
}

func (ContractEVFS_FunctionEVFS) Type() protoreflect.EnumType {
	return &file_evfs_proto_enumTypes[2]
}

func (x ContractEVFS_FunctionEVFS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContractEVFS_FunctionEVFS.Descriptor instead.
func (ContractEVFS_FunctionEVFS) EnumDescriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{2, 0}
}

type ReqEvfsDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataHash    string `protobuf:"bytes,1,opt,name=dataHash,proto3" json:"dataHash,omitempty"`
	VersionHash string `protobuf:"bytes,2,opt,name=versionHash,proto3" json:"versionHash,omitempty"`
	From        string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	BizId       string `protobuf:"bytes,4,opt,name=bizId,proto3" json:"bizId,omitempty"`
	SysId       string `protobuf:"bytes,5,opt,name=sysId,proto3" json:"sysId,omitempty"`
}

func (x *ReqEvfsDataInfo) Reset() {
	*x = ReqEvfsDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqEvfsDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqEvfsDataInfo) ProtoMessage() {}

func (x *ReqEvfsDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqEvfsDataInfo.ProtoReflect.Descriptor instead.
func (*ReqEvfsDataInfo) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{0}
}

func (x *ReqEvfsDataInfo) GetDataHash() string {
	if x != nil {
		return x.DataHash
	}
	return ""
}

func (x *ReqEvfsDataInfo) GetVersionHash() string {
	if x != nil {
		return x.VersionHash
	}
	return ""
}

func (x *ReqEvfsDataInfo) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ReqEvfsDataInfo) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

func (x *ReqEvfsDataInfo) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

type RespEvfsDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode    int32    `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg     string   `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	Data       []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Version    []byte   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp  int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Del        bool     `protobuf:"varint,6,opt,name=del,proto3" json:"del,omitempty"`
	DesKey     []byte   `protobuf:"bytes,7,opt,name=desKey,proto3" json:"desKey,omitempty"`
	Histories  [][]byte `protobuf:"bytes,8,rep,name=histories,proto3" json:"histories,omitempty"`
	Timestamps []int64  `protobuf:"varint,9,rep,packed,name=timestamps,proto3" json:"timestamps,omitempty"`
}

func (x *RespEvfsDataInfo) Reset() {
	*x = RespEvfsDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespEvfsDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespEvfsDataInfo) ProtoMessage() {}

func (x *RespEvfsDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespEvfsDataInfo.ProtoReflect.Descriptor instead.
func (*RespEvfsDataInfo) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{1}
}

func (x *RespEvfsDataInfo) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RespEvfsDataInfo) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RespEvfsDataInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RespEvfsDataInfo) GetVersion() []byte {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *RespEvfsDataInfo) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RespEvfsDataInfo) GetDel() bool {
	if x != nil {
		return x.Del
	}
	return false
}

func (x *RespEvfsDataInfo) GetDesKey() []byte {
	if x != nil {
		return x.DesKey
	}
	return nil
}

func (x *RespEvfsDataInfo) GetHistories() [][]byte {
	if x != nil {
		return x.Histories
	}
	return nil
}

func (x *RespEvfsDataInfo) GetTimestamps() []int64 {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

type ContractEVFS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Function ContractEVFS_FunctionEVFS `protobuf:"varint,1,opt,name=function,proto3,enum=entity.ContractEVFS_FunctionEVFS" json:"function,omitempty"` //
	//	bytes	from = 2;
	//	repeated  bytes	tos=3;
	//	repeated  bytes	values = 4;
	ExtDatas              []byte                     `protobuf:"bytes,2,opt,name=ext_datas,json=extDatas,proto3" json:"ext_datas,omitempty"`           //扩展信息
	FileUploadApplayData  *EVFSFileUploadApplyData   `protobuf:"bytes,3,opt,name=fileUploadApplayData,proto3" json:"fileUploadApplayData,omitempty"`   //
	FileAuthoriseOpData   *EVFSFileAuthoriseOPData   `protobuf:"bytes,4,opt,name=fileAuthoriseOpData,proto3" json:"fileAuthoriseOpData,omitempty"`     //
	ConfirmFileUplaodData *EVFSConfirmFileUploadData `protobuf:"bytes,5,opt,name=confirmFileUplaodData,proto3" json:"confirmFileUplaodData,omitempty"` //
	FileFreezeOpData      *EVFSFileFreezeOpData      `protobuf:"bytes,6,opt,name=fileFreezeOpData,proto3" json:"fileFreezeOpData,omitempty"`           //文件冻结操作数据
	FileDeleteApplyData   *EVFSFileDeleteApplyData   `protobuf:"bytes,7,opt,name=fileDeleteApplyData,proto3" json:"fileDeleteApplyData,omitempty"`     //文件删除申请
	FileDeleteConfirmData *EVFSFileDeleteConfirmData `protobuf:"bytes,8,opt,name=fileDeleteConfirmData,proto3" json:"fileDeleteConfirmData,omitempty"` //文件删除审核
	DataStorage           *EVFSDataStorageData       `protobuf:"bytes,9,opt,name=dataStorage,proto3" json:"dataStorage,omitempty"`
	DataAuthoriseOpData   *EVFSDataAuthoriseOPData   `protobuf:"bytes,10,opt,name=dataAuthoriseOpData,proto3" json:"dataAuthoriseOpData,omitempty"` //数据授权
	DataDelData           *EVFSDataDelData           `protobuf:"bytes,11,opt,name=dataDelData,proto3" json:"dataDelData,omitempty"`
}

func (x *ContractEVFS) Reset() {
	*x = ContractEVFS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractEVFS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractEVFS) ProtoMessage() {}

func (x *ContractEVFS) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractEVFS.ProtoReflect.Descriptor instead.
func (*ContractEVFS) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{2}
}

func (x *ContractEVFS) GetFunction() ContractEVFS_FunctionEVFS {
	if x != nil {
		return x.Function
	}
	return ContractEVFS_UNKNOW
}

func (x *ContractEVFS) GetExtDatas() []byte {
	if x != nil {
		return x.ExtDatas
	}
	return nil
}

func (x *ContractEVFS) GetFileUploadApplayData() *EVFSFileUploadApplyData {
	if x != nil {
		return x.FileUploadApplayData
	}
	return nil
}

func (x *ContractEVFS) GetFileAuthoriseOpData() *EVFSFileAuthoriseOPData {
	if x != nil {
		return x.FileAuthoriseOpData
	}
	return nil
}

func (x *ContractEVFS) GetConfirmFileUplaodData() *EVFSConfirmFileUploadData {
	if x != nil {
		return x.ConfirmFileUplaodData
	}
	return nil
}

func (x *ContractEVFS) GetFileFreezeOpData() *EVFSFileFreezeOpData {
	if x != nil {
		return x.FileFreezeOpData
	}
	return nil
}

func (x *ContractEVFS) GetFileDeleteApplyData() *EVFSFileDeleteApplyData {
	if x != nil {
		return x.FileDeleteApplyData
	}
	return nil
}

func (x *ContractEVFS) GetFileDeleteConfirmData() *EVFSFileDeleteConfirmData {
	if x != nil {
		return x.FileDeleteConfirmData
	}
	return nil
}

func (x *ContractEVFS) GetDataStorage() *EVFSDataStorageData {
	if x != nil {
		return x.DataStorage
	}
	return nil
}

func (x *ContractEVFS) GetDataAuthoriseOpData() *EVFSDataAuthoriseOPData {
	if x != nil {
		return x.DataAuthoriseOpData
	}
	return nil
}

func (x *ContractEVFS) GetDataDelData() *EVFSDataDelData {
	if x != nil {
		return x.DataDelData
	}
	return nil
}

type ReqGetBizDomainInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId string `protobuf:"bytes,1,opt,name=bizId,proto3" json:"bizId,omitempty"`
}

func (x *ReqGetBizDomainInfo) Reset() {
	*x = ReqGetBizDomainInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetBizDomainInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetBizDomainInfo) ProtoMessage() {}

func (x *ReqGetBizDomainInfo) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetBizDomainInfo.ProtoReflect.Descriptor instead.
func (*ReqGetBizDomainInfo) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{3}
}

func (x *ReqGetBizDomainInfo) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

type RespGetBizDomainInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode       int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg        string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	BizId         string `protobuf:"bytes,3,opt,name=bizId,proto3" json:"bizId,omitempty"`
	DataStorageId string `protobuf:"bytes,4,opt,name=dataStorageId,proto3" json:"dataStorageId,omitempty"`
	Name          string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Status        int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RespGetBizDomainInfo) Reset() {
	*x = RespGetBizDomainInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetBizDomainInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetBizDomainInfo) ProtoMessage() {}

func (x *RespGetBizDomainInfo) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetBizDomainInfo.ProtoReflect.Descriptor instead.
func (*RespGetBizDomainInfo) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{4}
}

func (x *RespGetBizDomainInfo) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RespGetBizDomainInfo) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RespGetBizDomainInfo) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

func (x *RespGetBizDomainInfo) GetDataStorageId() string {
	if x != nil {
		return x.DataStorageId
	}
	return ""
}

func (x *RespGetBizDomainInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RespGetBizDomainInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ReqGetDataStorageDomainInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizId string `protobuf:"bytes,1,opt,name=bizId,proto3" json:"bizId,omitempty"`
}

func (x *ReqGetDataStorageDomainInfo) Reset() {
	*x = ReqGetDataStorageDomainInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetDataStorageDomainInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetDataStorageDomainInfo) ProtoMessage() {}

func (x *ReqGetDataStorageDomainInfo) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetDataStorageDomainInfo.ProtoReflect.Descriptor instead.
func (*ReqGetDataStorageDomainInfo) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{5}
}

func (x *ReqGetDataStorageDomainInfo) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

type RespGetDataStorageDomainInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode       int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg        string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	DataStorageId string `protobuf:"bytes,3,opt,name=dataStorageId,proto3" json:"dataStorageId,omitempty"`
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Status        int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RespGetDataStorageDomainInfo) Reset() {
	*x = RespGetDataStorageDomainInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetDataStorageDomainInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetDataStorageDomainInfo) ProtoMessage() {}

func (x *RespGetDataStorageDomainInfo) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetDataStorageDomainInfo.ProtoReflect.Descriptor instead.
func (*RespGetDataStorageDomainInfo) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{6}
}

func (x *RespGetDataStorageDomainInfo) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RespGetDataStorageDomainInfo) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RespGetDataStorageDomainInfo) GetDataStorageId() string {
	if x != nil {
		return x.DataStorageId
	}
	return ""
}

func (x *RespGetDataStorageDomainInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RespGetDataStorageDomainInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ReqGetAvailableStorageNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataStorageDomainId string `protobuf:"bytes,1,opt,name=dataStorageDomainId,proto3" json:"dataStorageDomainId,omitempty"`
}

func (x *ReqGetAvailableStorageNode) Reset() {
	*x = ReqGetAvailableStorageNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetAvailableStorageNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAvailableStorageNode) ProtoMessage() {}

func (x *ReqGetAvailableStorageNode) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAvailableStorageNode.ProtoReflect.Descriptor instead.
func (*ReqGetAvailableStorageNode) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{7}
}

func (x *ReqGetAvailableStorageNode) GetDataStorageDomainId() string {
	if x != nil {
		return x.DataStorageDomainId
	}
	return ""
}

type RespGetAvailableStorageNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32    `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg  string   `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	NodeUrl []string `protobuf:"bytes,3,rep,name=nodeUrl,proto3" json:"nodeUrl,omitempty"`
}

func (x *RespGetAvailableStorageNode) Reset() {
	*x = RespGetAvailableStorageNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetAvailableStorageNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetAvailableStorageNode) ProtoMessage() {}

func (x *RespGetAvailableStorageNode) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetAvailableStorageNode.ProtoReflect.Descriptor instead.
func (*RespGetAvailableStorageNode) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{8}
}

func (x *RespGetAvailableStorageNode) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RespGetAvailableStorageNode) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RespGetAvailableStorageNode) GetNodeUrl() []string {
	if x != nil {
		return x.NodeUrl
	}
	return nil
}

type ReqValidateBizSystemMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizDomainId string `protobuf:"bytes,1,opt,name=bizDomainId,proto3" json:"bizDomainId,omitempty"`
	BizSystemId string `protobuf:"bytes,2,opt,name=bizSystemId,proto3" json:"bizSystemId,omitempty"`
}

func (x *ReqValidateBizSystemMessage) Reset() {
	*x = ReqValidateBizSystemMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqValidateBizSystemMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqValidateBizSystemMessage) ProtoMessage() {}

func (x *ReqValidateBizSystemMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqValidateBizSystemMessage.ProtoReflect.Descriptor instead.
func (*ReqValidateBizSystemMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{9}
}

func (x *ReqValidateBizSystemMessage) GetBizDomainId() string {
	if x != nil {
		return x.BizDomainId
	}
	return ""
}

func (x *ReqValidateBizSystemMessage) GetBizSystemId() string {
	if x != nil {
		return x.BizSystemId
	}
	return ""
}

type RespValidateBizSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode         int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg          string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	BizSystemName   string `protobuf:"bytes,3,opt,name=bizSystemName,proto3" json:"bizSystemName,omitempty"`
	BizSystemStatus int32  `protobuf:"varint,4,opt,name=bizSystemStatus,proto3" json:"bizSystemStatus,omitempty"`
}

func (x *RespValidateBizSystem) Reset() {
	*x = RespValidateBizSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespValidateBizSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespValidateBizSystem) ProtoMessage() {}

func (x *RespValidateBizSystem) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespValidateBizSystem.ProtoReflect.Descriptor instead.
func (*RespValidateBizSystem) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{10}
}

func (x *RespValidateBizSystem) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RespValidateBizSystem) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RespValidateBizSystem) GetBizSystemName() string {
	if x != nil {
		return x.BizSystemName
	}
	return ""
}

func (x *RespValidateBizSystem) GetBizSystemStatus() int32 {
	if x != nil {
		return x.BizSystemStatus
	}
	return 0
}

type ReqValidateHttpClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
}

func (x *ReqValidateHttpClientMessage) Reset() {
	*x = ReqValidateHttpClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqValidateHttpClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqValidateHttpClientMessage) ProtoMessage() {}

func (x *ReqValidateHttpClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqValidateHttpClientMessage.ProtoReflect.Descriptor instead.
func (*ReqValidateHttpClientMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{11}
}

func (x *ReqValidateHttpClientMessage) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type RespValidateHttpClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode      int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg       string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	ClientName   string `protobuf:"bytes,3,opt,name=clientName,proto3" json:"clientName,omitempty"`
	ClientStatus int32  `protobuf:"varint,4,opt,name=clientStatus,proto3" json:"clientStatus,omitempty"`
	Timestamp    string `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RespValidateHttpClient) Reset() {
	*x = RespValidateHttpClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespValidateHttpClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespValidateHttpClient) ProtoMessage() {}

func (x *RespValidateHttpClient) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespValidateHttpClient.ProtoReflect.Descriptor instead.
func (*RespValidateHttpClient) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{12}
}

func (x *RespValidateHttpClient) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RespValidateHttpClient) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RespValidateHttpClient) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *RespValidateHttpClient) GetClientStatus() int32 {
	if x != nil {
		return x.ClientStatus
	}
	return 0
}

func (x *RespValidateHttpClient) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type RetSessionFilterMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg  string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
}

func (x *RetSessionFilterMessage) Reset() {
	*x = RetSessionFilterMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetSessionFilterMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetSessionFilterMessage) ProtoMessage() {}

func (x *RetSessionFilterMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetSessionFilterMessage.ProtoReflect.Descriptor instead.
func (*RetSessionFilterMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{13}
}

func (x *RetSessionFilterMessage) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RetSessionFilterMessage) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

type ReqCallContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ContractEVFS `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReqCallContract) Reset() {
	*x = ReqCallContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCallContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCallContract) ProtoMessage() {}

func (x *ReqCallContract) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCallContract.ProtoReflect.Descriptor instead.
func (*ReqCallContract) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{14}
}

func (x *ReqCallContract) GetData() *ContractEVFS {
	if x != nil {
		return x.Data
	}
	return nil
}

type RespCallContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datas      []byte `protobuf:"bytes,1,opt,name=datas,proto3" json:"datas,omitempty"`
	RetCode    int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	RetMessage string `protobuf:"bytes,3,opt,name=ret_message,json=retMessage,proto3" json:"ret_message,omitempty"`
}

func (x *RespCallContract) Reset() {
	*x = RespCallContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCallContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCallContract) ProtoMessage() {}

func (x *RespCallContract) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCallContract.ProtoReflect.Descriptor instead.
func (*RespCallContract) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{15}
}

func (x *RespCallContract) GetDatas() []byte {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *RespCallContract) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RespCallContract) GetRetMessage() string {
	if x != nil {
		return x.RetMessage
	}
	return ""
}

type EVFSDataStorageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	DataOwner   []byte `protobuf:"bytes,2,opt,name=dataOwner,proto3" json:"dataOwner,omitempty"`
	RelDataHash []byte `protobuf:"bytes,3,opt,name=relDataHash,proto3" json:"relDataHash,omitempty"`
	Del         bool   `protobuf:"varint,4,opt,name=del,proto3" json:"del,omitempty"`
	DesKey      []byte `protobuf:"bytes,5,opt,name=desKey,proto3" json:"desKey,omitempty"`
	CKVersion   string `protobuf:"bytes,6,opt,name=CKVersion,proto3" json:"CKVersion,omitempty"`
	BizId       string `protobuf:"bytes,7,opt,name=bizId,proto3" json:"bizId,omitempty"`
}

func (x *EVFSDataStorageData) Reset() {
	*x = EVFSDataStorageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EVFSDataStorageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVFSDataStorageData) ProtoMessage() {}

func (x *EVFSDataStorageData) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVFSDataStorageData.ProtoReflect.Descriptor instead.
func (*EVFSDataStorageData) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{16}
}

func (x *EVFSDataStorageData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EVFSDataStorageData) GetDataOwner() []byte {
	if x != nil {
		return x.DataOwner
	}
	return nil
}

func (x *EVFSDataStorageData) GetRelDataHash() []byte {
	if x != nil {
		return x.RelDataHash
	}
	return nil
}

func (x *EVFSDataStorageData) GetDel() bool {
	if x != nil {
		return x.Del
	}
	return false
}

func (x *EVFSDataStorageData) GetDesKey() []byte {
	if x != nil {
		return x.DesKey
	}
	return nil
}

func (x *EVFSDataStorageData) GetCKVersion() string {
	if x != nil {
		return x.CKVersion
	}
	return ""
}

func (x *EVFSDataStorageData) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

type EVFSDataDelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataHash []byte `protobuf:"bytes,1,opt,name=dataHash,proto3" json:"dataHash,omitempty"`
}

func (x *EVFSDataDelData) Reset() {
	*x = EVFSDataDelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EVFSDataDelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVFSDataDelData) ProtoMessage() {}

func (x *EVFSDataDelData) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVFSDataDelData.ProtoReflect.Descriptor instead.
func (*EVFSDataDelData) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{17}
}

func (x *EVFSDataDelData) GetDataHash() []byte {
	if x != nil {
		return x.DataHash
	}
	return nil
}

type EVFSFileUploadApplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileInfo    []byte   `protobuf:"bytes,1,opt,name=fileInfo,proto3" json:"fileInfo,omitempty"`       //文件非加密部分
	EncFileInfo []byte   `protobuf:"bytes,2,opt,name=encFileInfo,proto3" json:"encFileInfo,omitempty"` //使用randomKey des加密的fileInfo信息
	DesKey      []byte   `protobuf:"bytes,3,opt,name=desKey,proto3" json:"desKey,omitempty"`           //chainkey加密的randomKey，hexStringBytes
	CKVersion   string   `protobuf:"bytes,4,opt,name=CKVersion,proto3" json:"CKVersion,omitempty"`     //chainkey 的version
	ClientAddr  []byte   `protobuf:"bytes,5,opt,name=clientAddr,proto3" json:"clientAddr,omitempty"`   //发起上传的前置节点地址
	FileOwner   []byte   `protobuf:"bytes,6,opt,name=fileOwner,proto3" json:"fileOwner,omitempty"`
	FileHash    []byte   `protobuf:"bytes,7,opt,name=fileHash,proto3" json:"fileHash,omitempty"`
	AuthAddrs   [][]byte `protobuf:"bytes,8,rep,name=authAddrs,proto3" json:"authAddrs,omitempty"`
}

func (x *EVFSFileUploadApplyData) Reset() {
	*x = EVFSFileUploadApplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EVFSFileUploadApplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVFSFileUploadApplyData) ProtoMessage() {}

func (x *EVFSFileUploadApplyData) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVFSFileUploadApplyData.ProtoReflect.Descriptor instead.
func (*EVFSFileUploadApplyData) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{18}
}

func (x *EVFSFileUploadApplyData) GetFileInfo() []byte {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

func (x *EVFSFileUploadApplyData) GetEncFileInfo() []byte {
	if x != nil {
		return x.EncFileInfo
	}
	return nil
}

func (x *EVFSFileUploadApplyData) GetDesKey() []byte {
	if x != nil {
		return x.DesKey
	}
	return nil
}

func (x *EVFSFileUploadApplyData) GetCKVersion() string {
	if x != nil {
		return x.CKVersion
	}
	return ""
}

func (x *EVFSFileUploadApplyData) GetClientAddr() []byte {
	if x != nil {
		return x.ClientAddr
	}
	return nil
}

func (x *EVFSFileUploadApplyData) GetFileOwner() []byte {
	if x != nil {
		return x.FileOwner
	}
	return nil
}

func (x *EVFSFileUploadApplyData) GetFileHash() []byte {
	if x != nil {
		return x.FileHash
	}
	return nil
}

func (x *EVFSFileUploadApplyData) GetAuthAddrs() [][]byte {
	if x != nil {
		return x.AuthAddrs
	}
	return nil
}

type FileInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSize    int64  `protobuf:"varint,1,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	RepeatCount int32  `protobuf:"varint,2,opt,name=repeatCount,proto3" json:"repeatCount,omitempty"` //备份个数
	SliceCount  int32  `protobuf:"varint,3,opt,name=sliceCount,proto3" json:"sliceCount,omitempty"`   //分片数量
	BizDomainId string `protobuf:"bytes,4,opt,name=bizDomainId,proto3" json:"bizDomainId,omitempty"`
	SysId       string `protobuf:"bytes,5,opt,name=sysId,proto3" json:"sysId,omitempty"`
	FileType    string `protobuf:"bytes,6,opt,name=fileType,proto3" json:"fileType,omitempty"` // 文件类型 doc jpg等
}

func (x *FileInfoData) Reset() {
	*x = FileInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoData) ProtoMessage() {}

func (x *FileInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoData.ProtoReflect.Descriptor instead.
func (*FileInfoData) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{19}
}

func (x *FileInfoData) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileInfoData) GetRepeatCount() int32 {
	if x != nil {
		return x.RepeatCount
	}
	return 0
}

func (x *FileInfoData) GetSliceCount() int32 {
	if x != nil {
		return x.SliceCount
	}
	return 0
}

func (x *FileInfoData) GetBizDomainId() string {
	if x != nil {
		return x.BizDomainId
	}
	return ""
}

func (x *FileInfoData) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *FileInfoData) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type FileInfoEncData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// int32  	fileSize = 1;	//文件大小
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"` //文件名
	FileDesc string `protobuf:"bytes,3,opt,name=fileDesc,proto3" json:"fileDesc,omitempty"` //文件描述
	// string	domain = 4;//文件所属域
	// string	symbol721c = 5;// 721token的名称
	// int64	totalVolumeCount = 8;//该文件一共有多少个721V
	StoreDeadLine   int64  `protobuf:"varint,9,opt,name=storeDeadLine,proto3" json:"storeDeadLine,omitempty"`      //存储时间限制
	OnChainDeadLine int64  `protobuf:"varint,10,opt,name=onChainDeadLine,proto3" json:"onChainDeadLine,omitempty"` //上链时间限制
	FileSign        string `protobuf:"bytes,11,opt,name=fileSign,proto3" json:"fileSign,omitempty"`                //文件内容MD5
	ExData          []byte `protobuf:"bytes,12,opt,name=exData,proto3" json:"exData,omitempty"`                    //附加信息
	//		repeated bytes nodeUrls = 13;//存储节点列表
	Compress bool `protobuf:"varint,14,opt,name=compress,proto3" json:"compress,omitempty"` //是否开启压缩
}

func (x *FileInfoEncData) Reset() {
	*x = FileInfoEncData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfoEncData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfoEncData) ProtoMessage() {}

func (x *FileInfoEncData) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfoEncData.ProtoReflect.Descriptor instead.
func (*FileInfoEncData) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{20}
}

func (x *FileInfoEncData) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileInfoEncData) GetFileDesc() string {
	if x != nil {
		return x.FileDesc
	}
	return ""
}

func (x *FileInfoEncData) GetStoreDeadLine() int64 {
	if x != nil {
		return x.StoreDeadLine
	}
	return 0
}

func (x *FileInfoEncData) GetOnChainDeadLine() int64 {
	if x != nil {
		return x.OnChainDeadLine
	}
	return 0
}

func (x *FileInfoEncData) GetFileSign() string {
	if x != nil {
		return x.FileSign
	}
	return ""
}

func (x *FileInfoEncData) GetExData() []byte {
	if x != nil {
		return x.ExData
	}
	return nil
}

func (x *FileInfoEncData) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

type EVFSFileAuthoriseOPData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHash    []byte   `protobuf:"bytes,1,opt,name=fileHash,proto3" json:"fileHash,omitempty"`       //
	AddAddrs    [][]byte `protobuf:"bytes,2,rep,name=addAddrs,proto3" json:"addAddrs,omitempty"`       //添加授权地址列表
	RemoveAddrs [][]byte `protobuf:"bytes,3,rep,name=removeAddrs,proto3" json:"removeAddrs,omitempty"` //移除授权地址列表
}

func (x *EVFSFileAuthoriseOPData) Reset() {
	*x = EVFSFileAuthoriseOPData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EVFSFileAuthoriseOPData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVFSFileAuthoriseOPData) ProtoMessage() {}

func (x *EVFSFileAuthoriseOPData) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVFSFileAuthoriseOPData.ProtoReflect.Descriptor instead.
func (*EVFSFileAuthoriseOPData) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{21}
}

func (x *EVFSFileAuthoriseOPData) GetFileHash() []byte {
	if x != nil {
		return x.FileHash
	}
	return nil
}

func (x *EVFSFileAuthoriseOPData) GetAddAddrs() [][]byte {
	if x != nil {
		return x.AddAddrs
	}
	return nil
}

func (x *EVFSFileAuthoriseOPData) GetRemoveAddrs() [][]byte {
	if x != nil {
		return x.RemoveAddrs
	}
	return nil
}

type EVFSDataAuthoriseOPData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataHash    []byte   `protobuf:"bytes,1,opt,name=dataHash,proto3" json:"dataHash,omitempty"`       //
	AddAddrs    [][]byte `protobuf:"bytes,2,rep,name=addAddrs,proto3" json:"addAddrs,omitempty"`       //添加授权地址列表
	RemoveAddrs [][]byte `protobuf:"bytes,3,rep,name=removeAddrs,proto3" json:"removeAddrs,omitempty"` //移除授权地址列表
}

func (x *EVFSDataAuthoriseOPData) Reset() {
	*x = EVFSDataAuthoriseOPData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EVFSDataAuthoriseOPData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVFSDataAuthoriseOPData) ProtoMessage() {}

func (x *EVFSDataAuthoriseOPData) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVFSDataAuthoriseOPData.ProtoReflect.Descriptor instead.
func (*EVFSDataAuthoriseOPData) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{22}
}

func (x *EVFSDataAuthoriseOPData) GetDataHash() []byte {
	if x != nil {
		return x.DataHash
	}
	return nil
}

func (x *EVFSDataAuthoriseOPData) GetAddAddrs() [][]byte {
	if x != nil {
		return x.AddAddrs
	}
	return nil
}

func (x *EVFSDataAuthoriseOPData) GetRemoveAddrs() [][]byte {
	if x != nil {
		return x.RemoveAddrs
	}
	return nil
}

type EVFSConfirmFileUploadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncFileInfo []byte `protobuf:"bytes,1,opt,name=encFileInfo,proto3" json:"encFileInfo,omitempty"` //使用randomKey des加密的fileInfo信息
	FileHash    []byte `protobuf:"bytes,2,opt,name=fileHash,proto3" json:"fileHash,omitempty"`       //文件hash
	VersionHash []byte `protobuf:"bytes,3,opt,name=versionHash,proto3" json:"versionHash,omitempty"`
}

func (x *EVFSConfirmFileUploadData) Reset() {
	*x = EVFSConfirmFileUploadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EVFSConfirmFileUploadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVFSConfirmFileUploadData) ProtoMessage() {}

func (x *EVFSConfirmFileUploadData) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVFSConfirmFileUploadData.ProtoReflect.Descriptor instead.
func (*EVFSConfirmFileUploadData) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{23}
}

func (x *EVFSConfirmFileUploadData) GetEncFileInfo() []byte {
	if x != nil {
		return x.EncFileInfo
	}
	return nil
}

func (x *EVFSConfirmFileUploadData) GetFileHash() []byte {
	if x != nil {
		return x.FileHash
	}
	return nil
}

func (x *EVFSConfirmFileUploadData) GetVersionHash() []byte {
	if x != nil {
		return x.VersionHash
	}
	return nil
}

type EVFSFileFreezeOpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHash []byte `protobuf:"bytes,1,opt,name=fileHash,proto3" json:"fileHash,omitempty"` //文件hash
	Type     int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`        //操作，1冻结，2解冻
}

func (x *EVFSFileFreezeOpData) Reset() {
	*x = EVFSFileFreezeOpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EVFSFileFreezeOpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVFSFileFreezeOpData) ProtoMessage() {}

func (x *EVFSFileFreezeOpData) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVFSFileFreezeOpData.ProtoReflect.Descriptor instead.
func (*EVFSFileFreezeOpData) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{24}
}

func (x *EVFSFileFreezeOpData) GetFileHash() []byte {
	if x != nil {
		return x.FileHash
	}
	return nil
}

func (x *EVFSFileFreezeOpData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type EVFSFileDeleteApplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHash []byte   `protobuf:"bytes,1,opt,name=fileHash,proto3" json:"fileHash,omitempty"` //文件hash
	Addrs    [][]byte `protobuf:"bytes,2,rep,name=addrs,proto3" json:"addrs,omitempty"`       //审核人列表
}

func (x *EVFSFileDeleteApplyData) Reset() {
	*x = EVFSFileDeleteApplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EVFSFileDeleteApplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVFSFileDeleteApplyData) ProtoMessage() {}

func (x *EVFSFileDeleteApplyData) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVFSFileDeleteApplyData.ProtoReflect.Descriptor instead.
func (*EVFSFileDeleteApplyData) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{25}
}

func (x *EVFSFileDeleteApplyData) GetFileHash() []byte {
	if x != nil {
		return x.FileHash
	}
	return nil
}

func (x *EVFSFileDeleteApplyData) GetAddrs() [][]byte {
	if x != nil {
		return x.Addrs
	}
	return nil
}

type EVFSFileDeleteConfirmData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHash []byte `protobuf:"bytes,1,opt,name=fileHash,proto3" json:"fileHash,omitempty"` //文件hash
	Type     int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`        //操作，1同意删除；2拒绝删除
}

func (x *EVFSFileDeleteConfirmData) Reset() {
	*x = EVFSFileDeleteConfirmData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EVFSFileDeleteConfirmData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EVFSFileDeleteConfirmData) ProtoMessage() {}

func (x *EVFSFileDeleteConfirmData) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EVFSFileDeleteConfirmData.ProtoReflect.Descriptor instead.
func (*EVFSFileDeleteConfirmData) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{26}
}

func (x *EVFSFileDeleteConfirmData) GetFileHash() []byte {
	if x != nil {
		return x.FileHash
	}
	return nil
}

func (x *EVFSFileDeleteConfirmData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

//evfs
type PutFileSegmentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxReqHash      string           `protobuf:"bytes,1,opt,name=txReqHash,proto3" json:"txReqHash,omitempty"`        //请求的hash
	Contents       []byte           `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`          //该文件块的部分内容
	Skip           int32            `protobuf:"varint,3,opt,name=skip,proto3" json:"skip,omitempty"`                 //跳过的字节数
	Limit          int32            `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`               //length(contents+sign)
	Compress       bool             `protobuf:"varint,5,opt,name=compress,proto3" json:"compress,omitempty"`         //是否开启压缩
	FromClient     bool             `protobuf:"varint,6,opt,name=fromClient,proto3" json:"fromClient,omitempty"`     //是否是客户端提交
	ChainForward   bool             `protobuf:"varint,7,opt,name=chainForward,proto3" json:"chainForward,omitempty"` //是否由服务端分发副本
	Sign           string           `protobuf:"bytes,8,opt,name=sign,proto3" json:"sign,omitempty"`                  //txReqHash私钥签名
	SegmentUuid    string           `protobuf:"bytes,9,opt,name=segmentUuid,proto3" json:"segmentUuid,omitempty"`
	FileStoreName  string           `protobuf:"bytes,10,opt,name=fileStoreName,proto3" json:"fileStoreName,omitempty"`   //分片存储文件名称
	NodesCoAddress string           `protobuf:"bytes,11,opt,name=nodesCoAddress,proto3" json:"nodesCoAddress,omitempty"` //在哪些节点
	StoreNodeInfo  []*StoreNodeInfo `protobuf:"bytes,12,rep,name=storeNodeInfo,proto3" json:"storeNodeInfo,omitempty"`   //分片存储信息
	CKVersion      string           `protobuf:"bytes,13,opt,name=CKVersion,proto3" json:"CKVersion,omitempty"`           //chainkey版本
}

func (x *PutFileSegmentMessage) Reset() {
	*x = PutFileSegmentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutFileSegmentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutFileSegmentMessage) ProtoMessage() {}

func (x *PutFileSegmentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutFileSegmentMessage.ProtoReflect.Descriptor instead.
func (*PutFileSegmentMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{27}
}

func (x *PutFileSegmentMessage) GetTxReqHash() string {
	if x != nil {
		return x.TxReqHash
	}
	return ""
}

func (x *PutFileSegmentMessage) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *PutFileSegmentMessage) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *PutFileSegmentMessage) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PutFileSegmentMessage) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

func (x *PutFileSegmentMessage) GetFromClient() bool {
	if x != nil {
		return x.FromClient
	}
	return false
}

func (x *PutFileSegmentMessage) GetChainForward() bool {
	if x != nil {
		return x.ChainForward
	}
	return false
}

func (x *PutFileSegmentMessage) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *PutFileSegmentMessage) GetSegmentUuid() string {
	if x != nil {
		return x.SegmentUuid
	}
	return ""
}

func (x *PutFileSegmentMessage) GetFileStoreName() string {
	if x != nil {
		return x.FileStoreName
	}
	return ""
}

func (x *PutFileSegmentMessage) GetNodesCoAddress() string {
	if x != nil {
		return x.NodesCoAddress
	}
	return ""
}

func (x *PutFileSegmentMessage) GetStoreNodeInfo() []*StoreNodeInfo {
	if x != nil {
		return x.StoreNodeInfo
	}
	return nil
}

func (x *PutFileSegmentMessage) GetCKVersion() string {
	if x != nil {
		return x.CKVersion
	}
	return ""
}

type GetFileMD5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHash    string `protobuf:"bytes,1,opt,name=fileHash,proto3" json:"fileHash,omitempty"`
	VersionHash string `protobuf:"bytes,2,opt,name=versionHash,proto3" json:"versionHash,omitempty"`
}

func (x *GetFileMD5) Reset() {
	*x = GetFileMD5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileMD5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileMD5) ProtoMessage() {}

func (x *GetFileMD5) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileMD5.ProtoReflect.Descriptor instead.
func (*GetFileMD5) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{28}
}

func (x *GetFileMD5) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

func (x *GetFileMD5) GetVersionHash() string {
	if x != nil {
		return x.VersionHash
	}
	return ""
}

type RetGetFileMD5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg  string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	Md5     string `protobuf:"bytes,3,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *RetGetFileMD5) Reset() {
	*x = RetGetFileMD5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetGetFileMD5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetGetFileMD5) ProtoMessage() {}

func (x *RetGetFileMD5) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetGetFileMD5.ProtoReflect.Descriptor instead.
func (*RetGetFileMD5) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{29}
}

func (x *RetGetFileMD5) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RetGetFileMD5) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RetGetFileMD5) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

type RetPutFileSegmentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg  string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
}

func (x *RetPutFileSegmentMessage) Reset() {
	*x = RetPutFileSegmentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetPutFileSegmentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetPutFileSegmentMessage) ProtoMessage() {}

func (x *RetPutFileSegmentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetPutFileSegmentMessage.ProtoReflect.Descriptor instead.
func (*RetPutFileSegmentMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{30}
}

func (x *RetPutFileSegmentMessage) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RetPutFileSegmentMessage) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

type GetFileSegmentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHash      string `protobuf:"bytes,1,opt,name=fileHash,proto3" json:"fileHash,omitempty"` //请求上传的hash
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	BizId         string `protobuf:"bytes,3,opt,name=bizId,proto3" json:"bizId,omitempty"`
	SysId         string `protobuf:"bytes,4,opt,name=sysId,proto3" json:"sysId,omitempty"`
	Timestamp     string `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`         //时间戳
	Sign          string `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`                   //txEvfsHash+timestamp的私钥签名
	FileStoreName string `protobuf:"bytes,7,opt,name=fileStoreName,proto3" json:"fileStoreName,omitempty"` //文件块id
}

func (x *GetFileSegmentMessage) Reset() {
	*x = GetFileSegmentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileSegmentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileSegmentMessage) ProtoMessage() {}

func (x *GetFileSegmentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileSegmentMessage.ProtoReflect.Descriptor instead.
func (*GetFileSegmentMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{31}
}

func (x *GetFileSegmentMessage) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

func (x *GetFileSegmentMessage) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetFileSegmentMessage) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

func (x *GetFileSegmentMessage) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *GetFileSegmentMessage) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *GetFileSegmentMessage) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *GetFileSegmentMessage) GetFileStoreName() string {
	if x != nil {
		return x.FileStoreName
	}
	return ""
}

type RetGetFileSegmentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg  string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` //文件内容
}

func (x *RetGetFileSegmentMessage) Reset() {
	*x = RetGetFileSegmentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetGetFileSegmentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetGetFileSegmentMessage) ProtoMessage() {}

func (x *RetGetFileSegmentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetGetFileSegmentMessage.ProtoReflect.Descriptor instead.
func (*RetGetFileSegmentMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{32}
}

func (x *RetGetFileSegmentMessage) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RetGetFileSegmentMessage) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RetGetFileSegmentMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckFileAuthMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHash string `protobuf:"bytes,1,opt,name=fileHash,proto3" json:"fileHash,omitempty"` //请求上传的hash
	Sign     string `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`         //txEvfsHash的私钥签名
}

func (x *CheckFileAuthMessage) Reset() {
	*x = CheckFileAuthMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckFileAuthMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFileAuthMessage) ProtoMessage() {}

func (x *CheckFileAuthMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFileAuthMessage.ProtoReflect.Descriptor instead.
func (*CheckFileAuthMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{33}
}

func (x *CheckFileAuthMessage) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

func (x *CheckFileAuthMessage) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type RetCheckFileAuthMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg  string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	Valid   bool   `protobuf:"varint,3,opt,name=valid,proto3" json:"valid,omitempty"` //授权是否有效
}

func (x *RetCheckFileAuthMessage) Reset() {
	*x = RetCheckFileAuthMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetCheckFileAuthMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetCheckFileAuthMessage) ProtoMessage() {}

func (x *RetCheckFileAuthMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetCheckFileAuthMessage.ProtoReflect.Descriptor instead.
func (*RetCheckFileAuthMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{34}
}

func (x *RetCheckFileAuthMessage) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RetCheckFileAuthMessage) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RetCheckFileAuthMessage) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type GetChainKeyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"` //版本
}

func (x *GetChainKeyMessage) Reset() {
	*x = GetChainKeyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainKeyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainKeyMessage) ProtoMessage() {}

func (x *GetChainKeyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainKeyMessage.ProtoReflect.Descriptor instead.
func (*GetChainKeyMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{35}
}

func (x *GetChainKeyMessage) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type RetGetChainKeyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode   int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg    string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	ChainKey  string `protobuf:"bytes,3,opt,name=chainKey,proto3" json:"chainKey,omitempty"`   //文件内容
	CKVersion string `protobuf:"bytes,4,opt,name=CKVersion,proto3" json:"CKVersion,omitempty"` //chainkey 版本
}

func (x *RetGetChainKeyMessage) Reset() {
	*x = RetGetChainKeyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetGetChainKeyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetGetChainKeyMessage) ProtoMessage() {}

func (x *RetGetChainKeyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetGetChainKeyMessage.ProtoReflect.Descriptor instead.
func (*RetGetChainKeyMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{36}
}

func (x *RetGetChainKeyMessage) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RetGetChainKeyMessage) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RetGetChainKeyMessage) GetChainKey() string {
	if x != nil {
		return x.ChainKey
	}
	return ""
}

func (x *RetGetChainKeyMessage) GetCKVersion() string {
	if x != nil {
		return x.CKVersion
	}
	return ""
}

type GetFileInfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileHash    string `protobuf:"bytes,1,opt,name=fileHash,proto3" json:"fileHash,omitempty"` //请求上传的hash
	VersionHash string `protobuf:"bytes,2,opt,name=versionHash,proto3" json:"versionHash,omitempty"`
	Address     string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"` // 用户
}

func (x *GetFileInfoMessage) Reset() {
	*x = GetFileInfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoMessage) ProtoMessage() {}

func (x *GetFileInfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoMessage.ProtoReflect.Descriptor instead.
func (*GetFileInfoMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{37}
}

func (x *GetFileInfoMessage) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

func (x *GetFileInfoMessage) GetVersionHash() string {
	if x != nil {
		return x.VersionHash
	}
	return ""
}

func (x *GetFileInfoMessage) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RetGetFileInfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode          int32    `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg           string   `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	FileInfoHex      string   `protobuf:"bytes,3,opt,name=fileInfoHex,proto3" json:"fileInfoHex,omitempty"` //文件元信息，deskey加密的hexString
	DesKeyHex        string   `protobuf:"bytes,4,opt,name=desKeyHex,proto3" json:"desKeyHex,omitempty"`     //用户公钥加密的deskey，hexString
	AuthAddrs        []string `protobuf:"bytes,5,rep,name=authAddrs,proto3" json:"authAddrs,omitempty"`     //授权的用户地址，包含上传者
	VersionHash      string   `protobuf:"bytes,6,opt,name=versionHash,proto3" json:"versionHash,omitempty"`
	CreatedAt        int64    `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	VersionHistories []string `protobuf:"bytes,8,rep,name=versionHistories,proto3" json:"versionHistories,omitempty"`
	Timestamps       []int64  `protobuf:"varint,9,rep,packed,name=timestamps,proto3" json:"timestamps,omitempty"`
}

func (x *RetGetFileInfoMessage) Reset() {
	*x = RetGetFileInfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetGetFileInfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetGetFileInfoMessage) ProtoMessage() {}

func (x *RetGetFileInfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetGetFileInfoMessage.ProtoReflect.Descriptor instead.
func (*RetGetFileInfoMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{38}
}

func (x *RetGetFileInfoMessage) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RetGetFileInfoMessage) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RetGetFileInfoMessage) GetFileInfoHex() string {
	if x != nil {
		return x.FileInfoHex
	}
	return ""
}

func (x *RetGetFileInfoMessage) GetDesKeyHex() string {
	if x != nil {
		return x.DesKeyHex
	}
	return ""
}

func (x *RetGetFileInfoMessage) GetAuthAddrs() []string {
	if x != nil {
		return x.AuthAddrs
	}
	return nil
}

func (x *RetGetFileInfoMessage) GetVersionHash() string {
	if x != nil {
		return x.VersionHash
	}
	return ""
}

func (x *RetGetFileInfoMessage) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RetGetFileInfoMessage) GetVersionHistories() []string {
	if x != nil {
		return x.VersionHistories
	}
	return nil
}

func (x *RetGetFileInfoMessage) GetTimestamps() []int64 {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

type RetAccountStorageMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode int32                 `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg  string                `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	Items   []*AccountStorageItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RetAccountStorageMessage) Reset() {
	*x = RetAccountStorageMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetAccountStorageMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetAccountStorageMessage) ProtoMessage() {}

func (x *RetAccountStorageMessage) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetAccountStorageMessage.ProtoReflect.Descriptor instead.
func (*RetAccountStorageMessage) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{39}
}

func (x *RetAccountStorageMessage) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RetAccountStorageMessage) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RetAccountStorageMessage) GetItems() []*AccountStorageItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type AccountStorageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string                `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value    string                `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	SubItems []*AccountStorageItem `protobuf:"bytes,3,rep,name=subItems,proto3" json:"subItems,omitempty"`
}

func (x *AccountStorageItem) Reset() {
	*x = AccountStorageItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_evfs_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountStorageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountStorageItem) ProtoMessage() {}

func (x *AccountStorageItem) ProtoReflect() protoreflect.Message {
	mi := &file_evfs_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountStorageItem.ProtoReflect.Descriptor instead.
func (*AccountStorageItem) Descriptor() ([]byte, []int) {
	return file_evfs_proto_rawDescGZIP(), []int{40}
}

func (x *AccountStorageItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AccountStorageItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AccountStorageItem) GetSubItems() []*AccountStorageItem {
	if x != nil {
		return x.SubItems
	}
	return nil
}

var File_evfs_proto protoreflect.FileDescriptor

var file_evfs_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x65, 0x76, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x1a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x45, 0x76, 0x66,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x69, 0x7a, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x22, 0xf8, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x45, 0x76, 0x66, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x65,
	0x73, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x73, 0x22, 0x92, 0x08, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45,
	0x56, 0x46, 0x53, 0x12, 0x3d, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x56, 0x46, 0x53, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x56, 0x46, 0x53, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x78, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x12,
	0x53, 0x0a, 0x14, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x45, 0x56, 0x46, 0x53, 0x46, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14,
	0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x61, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x73, 0x65, 0x4f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x45, 0x56, 0x46, 0x53, 0x46,
	0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x73, 0x65, 0x4f, 0x50, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x73,
	0x65, 0x4f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x57, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x61, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x45, 0x56, 0x46, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x61, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x48, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x4f, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x45, 0x56, 0x46, 0x53, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x4f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x72,
	0x65, 0x65, 0x7a, 0x65, 0x4f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x13, 0x66, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x45, 0x56, 0x46, 0x53, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x57, 0x0a,
	0x15, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x45, 0x56, 0x46, 0x53, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x15, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x45, 0x56, 0x46, 0x53, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x51, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x61, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x73, 0x65, 0x4f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x45, 0x56, 0x46, 0x53,
	0x44, 0x61, 0x74, 0x61, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x73, 0x65, 0x4f, 0x50, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x13, 0x64, 0x61, 0x74, 0x61, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x73, 0x65, 0x4f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61,
	0x44, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x45, 0x56, 0x46, 0x53, 0x44, 0x61, 0x74, 0x61, 0x44,
	0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xe1, 0x01, 0x0a, 0x0c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x56, 0x46, 0x53, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x49, 0x4c, 0x45, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x41,
	0x50, 0x50, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x49, 0x4c, 0x45, 0x41, 0x55,
	0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x49, 0x4c,
	0x45, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x10, 0x04,
	0x12, 0x10, 0x0a, 0x0c, 0x46, 0x49, 0x4c, 0x45, 0x46, 0x52, 0x45, 0x45, 0x5a, 0x45, 0x4f, 0x50,
	0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x49, 0x4c, 0x45, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x41, 0x50, 0x50, 0x4c, 0x59, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x49, 0x4c, 0x45, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x10, 0x07, 0x12, 0x0d,
	0x0a, 0x09, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x10, 0x08, 0x12, 0x16, 0x0a,
	0x12, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52,
	0x49, 0x5a, 0x45, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x41, 0x54, 0x41, 0x53, 0x54, 0x4f,
	0x52, 0x45, 0x44, 0x45, 0x4c, 0x10, 0x0a, 0x22, 0x2b, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x47, 0x65,
	0x74, 0x42, 0x69, 0x7a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62,
	0x69, 0x7a, 0x49, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x7a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a, 0x1b, 0x52, 0x65, 0x71, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a,
	0x1c, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12,
	0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x4e, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x22, 0x69, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d,
	0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x61, 0x0a, 0x1b,
	0x52, 0x65, 0x71, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x42, 0x69, 0x7a, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62,
	0x69, 0x7a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x69, 0x7a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x62, 0x69, 0x7a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x7a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x99, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x69, 0x7a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x62,
	0x69, 0x7a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x62, 0x69, 0x7a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x69, 0x7a, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x62, 0x69, 0x7a, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x1c, 0x52,
	0x65, 0x71, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x74, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4b, 0x0a, 0x17, 0x52, 0x65, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x22, 0x3b, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x56, 0x46, 0x53, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x64, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x13, 0x45, 0x56, 0x46, 0x53, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x03, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x4b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x4b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69,
	0x7a, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64,
	0x22, 0x2d, 0x0a, 0x0f, 0x45, 0x56, 0x46, 0x53, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x85, 0x02, 0x0a, 0x17, 0x45, 0x56, 0x46, 0x53, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x65, 0x6e,
	0x63, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x73,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x65, 0x73, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x4b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x4b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x41, 0x64, 0x64, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6c, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x69, 0x7a, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x7a,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x79, 0x73, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe9, 0x01, 0x0a, 0x0f, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x44,
	0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x44, 0x65,
	0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x65, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x22, 0x73, 0x0a, 0x17, 0x45, 0x56, 0x46, 0x53, 0x46, 0x69,
	0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x73, 0x65, 0x4f, 0x50, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x08, 0x61, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x73, 0x22, 0x73, 0x0a, 0x17, 0x45,
	0x56, 0x46, 0x53, 0x44, 0x61, 0x74, 0x61, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x73, 0x65,
	0x4f, 0x50, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x61, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x73,
	0x22, 0x7b, 0x0a, 0x19, 0x45, 0x56, 0x46, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46,
	0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a,
	0x0b, 0x65, 0x6e, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0x46, 0x0a,
	0x14, 0x45, 0x56, 0x46, 0x53, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x4f,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4b, 0x0a, 0x17, 0x45, 0x56, 0x46, 0x53, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x64, 0x64,
	0x72, 0x73, 0x22, 0x4b, 0x0a, 0x19, 0x45, 0x56, 0x46, 0x53, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0xba, 0x03, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x78, 0x52,
	0x65, 0x71, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x78,
	0x52, 0x65, 0x71, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66,
	0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x43, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x43, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x4b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x4b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x44, 0x35, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0x53, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x44, 0x35, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x64, 0x35, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0x4c, 0x0a,
	0x18, 0x52, 0x65, 0x74, 0x50, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x22, 0xd1, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x69, 0x7a, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x60, 0x0a, 0x18, 0x52, 0x65, 0x74, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x46, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x61, 0x0a, 0x17, 0x52, 0x65, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x75, 0x74, 0x68, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a,
	0x15, 0x52, 0x65, 0x74, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x4b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x4b, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0xb3, 0x02, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x65, 0x78, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x48, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x48, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x22, 0x7e, 0x0a, 0x18, 0x52, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x74, 0x4d, 0x73, 0x67, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x74, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x08, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0x17, 0x0a, 0x0c,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x07, 0x0a, 0x03,
	0x45, 0x56, 0x41, 0x10, 0x00, 0x2a, 0x94, 0x01, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x4d, 0x44, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x55, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x51, 0x55, 0x45, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x50, 0x4c, 0x10, 0x02, 0x12, 0x07,
	0x0a, 0x03, 0x44, 0x4e, 0x4c, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x48, 0x4b, 0x10, 0x04,
	0x12, 0x07, 0x0a, 0x03, 0x47, 0x43, 0x4b, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x46, 0x49,
	0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x56, 0x4c, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x47,
	0x45, 0x44, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x45, 0x44, 0x48, 0x10, 0x09, 0x12, 0x08,
	0x0a, 0x04, 0x4c, 0x44, 0x53, 0x4e, 0x10, 0x3c, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x44, 0x53, 0x10,
	0x3d, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x42, 0x44, 0x10, 0x3e, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x42,
	0x53, 0x10, 0x46, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x48, 0x43, 0x10, 0x47, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_evfs_proto_rawDescOnce sync.Once
	file_evfs_proto_rawDescData = file_evfs_proto_rawDesc
)

func file_evfs_proto_rawDescGZIP() []byte {
	file_evfs_proto_rawDescOnce.Do(func() {
		file_evfs_proto_rawDescData = protoimpl.X.CompressGZIP(file_evfs_proto_rawDescData)
	})
	return file_evfs_proto_rawDescData
}

var file_evfs_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_evfs_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_evfs_proto_goTypes = []interface{}{
	(ActionModule)(0),                    // 0: entity.ActionModule
	(ActionCMD)(0),                       // 1: entity.ActionCMD
	(ContractEVFS_FunctionEVFS)(0),       // 2: entity.ContractEVFS.FunctionEVFS
	(*ReqEvfsDataInfo)(nil),              // 3: entity.ReqEvfsDataInfo
	(*RespEvfsDataInfo)(nil),             // 4: entity.RespEvfsDataInfo
	(*ContractEVFS)(nil),                 // 5: entity.ContractEVFS
	(*ReqGetBizDomainInfo)(nil),          // 6: entity.ReqGetBizDomainInfo
	(*RespGetBizDomainInfo)(nil),         // 7: entity.RespGetBizDomainInfo
	(*ReqGetDataStorageDomainInfo)(nil),  // 8: entity.ReqGetDataStorageDomainInfo
	(*RespGetDataStorageDomainInfo)(nil), // 9: entity.RespGetDataStorageDomainInfo
	(*ReqGetAvailableStorageNode)(nil),   // 10: entity.ReqGetAvailableStorageNode
	(*RespGetAvailableStorageNode)(nil),  // 11: entity.RespGetAvailableStorageNode
	(*ReqValidateBizSystemMessage)(nil),  // 12: entity.ReqValidateBizSystemMessage
	(*RespValidateBizSystem)(nil),        // 13: entity.RespValidateBizSystem
	(*ReqValidateHttpClientMessage)(nil), // 14: entity.ReqValidateHttpClientMessage
	(*RespValidateHttpClient)(nil),       // 15: entity.RespValidateHttpClient
	(*RetSessionFilterMessage)(nil),      // 16: entity.RetSessionFilterMessage
	(*ReqCallContract)(nil),              // 17: entity.ReqCallContract
	(*RespCallContract)(nil),             // 18: entity.RespCallContract
	(*EVFSDataStorageData)(nil),          // 19: entity.EVFSDataStorageData
	(*EVFSDataDelData)(nil),              // 20: entity.EVFSDataDelData
	(*EVFSFileUploadApplyData)(nil),      // 21: entity.EVFSFileUploadApplyData
	(*FileInfoData)(nil),                 // 22: entity.FileInfoData
	(*FileInfoEncData)(nil),              // 23: entity.FileInfoEncData
	(*EVFSFileAuthoriseOPData)(nil),      // 24: entity.EVFSFileAuthoriseOPData
	(*EVFSDataAuthoriseOPData)(nil),      // 25: entity.EVFSDataAuthoriseOPData
	(*EVFSConfirmFileUploadData)(nil),    // 26: entity.EVFSConfirmFileUploadData
	(*EVFSFileFreezeOpData)(nil),         // 27: entity.EVFSFileFreezeOpData
	(*EVFSFileDeleteApplyData)(nil),      // 28: entity.EVFSFileDeleteApplyData
	(*EVFSFileDeleteConfirmData)(nil),    // 29: entity.EVFSFileDeleteConfirmData
	(*PutFileSegmentMessage)(nil),        // 30: entity.PutFileSegmentMessage
	(*GetFileMD5)(nil),                   // 31: entity.GetFileMD5
	(*RetGetFileMD5)(nil),                // 32: entity.RetGetFileMD5
	(*RetPutFileSegmentMessage)(nil),     // 33: entity.RetPutFileSegmentMessage
	(*GetFileSegmentMessage)(nil),        // 34: entity.GetFileSegmentMessage
	(*RetGetFileSegmentMessage)(nil),     // 35: entity.RetGetFileSegmentMessage
	(*CheckFileAuthMessage)(nil),         // 36: entity.CheckFileAuthMessage
	(*RetCheckFileAuthMessage)(nil),      // 37: entity.RetCheckFileAuthMessage
	(*GetChainKeyMessage)(nil),           // 38: entity.GetChainKeyMessage
	(*RetGetChainKeyMessage)(nil),        // 39: entity.RetGetChainKeyMessage
	(*GetFileInfoMessage)(nil),           // 40: entity.GetFileInfoMessage
	(*RetGetFileInfoMessage)(nil),        // 41: entity.RetGetFileInfoMessage
	(*RetAccountStorageMessage)(nil),     // 42: entity.RetAccountStorageMessage
	(*AccountStorageItem)(nil),           // 43: entity.AccountStorageItem
	(*StoreNodeInfo)(nil),                // 44: entity.StoreNodeInfo
}
var file_evfs_proto_depIdxs = []int32{
	2,  // 0: entity.ContractEVFS.function:type_name -> entity.ContractEVFS.FunctionEVFS
	21, // 1: entity.ContractEVFS.fileUploadApplayData:type_name -> entity.EVFSFileUploadApplyData
	24, // 2: entity.ContractEVFS.fileAuthoriseOpData:type_name -> entity.EVFSFileAuthoriseOPData
	26, // 3: entity.ContractEVFS.confirmFileUplaodData:type_name -> entity.EVFSConfirmFileUploadData
	27, // 4: entity.ContractEVFS.fileFreezeOpData:type_name -> entity.EVFSFileFreezeOpData
	28, // 5: entity.ContractEVFS.fileDeleteApplyData:type_name -> entity.EVFSFileDeleteApplyData
	29, // 6: entity.ContractEVFS.fileDeleteConfirmData:type_name -> entity.EVFSFileDeleteConfirmData
	19, // 7: entity.ContractEVFS.dataStorage:type_name -> entity.EVFSDataStorageData
	25, // 8: entity.ContractEVFS.dataAuthoriseOpData:type_name -> entity.EVFSDataAuthoriseOPData
	20, // 9: entity.ContractEVFS.dataDelData:type_name -> entity.EVFSDataDelData
	5,  // 10: entity.ReqCallContract.data:type_name -> entity.ContractEVFS
	44, // 11: entity.PutFileSegmentMessage.storeNodeInfo:type_name -> entity.StoreNodeInfo
	43, // 12: entity.RetAccountStorageMessage.items:type_name -> entity.AccountStorageItem
	43, // 13: entity.AccountStorageItem.subItems:type_name -> entity.AccountStorageItem
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_evfs_proto_init() }
func file_evfs_proto_init() {
	if File_evfs_proto != nil {
		return
	}
	file_filestore_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_evfs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqEvfsDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespEvfsDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractEVFS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetBizDomainInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetBizDomainInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetDataStorageDomainInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetDataStorageDomainInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetAvailableStorageNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetAvailableStorageNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqValidateBizSystemMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespValidateBizSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqValidateHttpClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespValidateHttpClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetSessionFilterMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCallContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCallContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EVFSDataStorageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EVFSDataDelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EVFSFileUploadApplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfoEncData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EVFSFileAuthoriseOPData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EVFSDataAuthoriseOPData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EVFSConfirmFileUploadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EVFSFileFreezeOpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EVFSFileDeleteApplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EVFSFileDeleteConfirmData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutFileSegmentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileMD5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetGetFileMD5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetPutFileSegmentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileSegmentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetGetFileSegmentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckFileAuthMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetCheckFileAuthMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainKeyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetGetChainKeyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetGetFileInfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetAccountStorageMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_evfs_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountStorageItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_evfs_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_evfs_proto_goTypes,
		DependencyIndexes: file_evfs_proto_depIdxs,
		EnumInfos:         file_evfs_proto_enumTypes,
		MessageInfos:      file_evfs_proto_msgTypes,
	}.Build()
	File_evfs_proto = out.File
	file_evfs_proto_rawDesc = nil
	file_evfs_proto_goTypes = nil
	file_evfs_proto_depIdxs = nil
}
